[package]
name = "banyan"
license = "MIT"
description = "tomb compresses and encrypts data for Filecoin"
homepage = "https://banyan.computer"
repository = "https://github.com/banyancomputer/tomb"
version = "1.1.1"
readme = "README.md"
edition = "2021"

# Cargo publication optionals
categories = [
  "compression",
  "cryptography",
  "encoding",
  "filesystem"
]
keywords = [
    "decentralization",
    "filecoin",
    "ipfs",
    "storage"
]

# These dependencies are specific to the CLI or would break WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "^1", features = ["full", "io-util", "fs"]}
clap = { version = "^4", features = ["derive"] }
criterion = { version = "^0.5", features = ["async_tokio"] }
dir-assert = { git = "https://github.com/banyancomputer/dir-assert.git", branch = "non-utf8", version = "^0.2" }
fake-file = "^0.1"
fs_extra = "^1"
jwalk = "^0.8"
lazy_static = "^1"
hex = "0.4.3"
base58 = "0.2.0"
sha2 = "0.10.8"
sha1 = "0.10.6"
futures-core = "0.3.29"
open = "5.0.0"
fclones = "0.34.0"
indicatif = "0.17.7"
bytesize = "1.3.0"
base64 = "0.21.5"
env_logger = "0.10.0"
log = "0.4.20"

# These dependencies are specific to the CLI or would break WASM for testing
[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
serial_test = "2.0.0"

# Dependencies that must exist independent of architecture
[dependencies]
anyhow = { version = "^1", features = ["backtrace"] }
tomb-crypt = { git = "https://github.com/banyancomputer/tomb-crypt", branch = "main", version = "^0.1" }
wnfs = { git = "https://github.com/banyancomputer/rs-wnfs", branch = "main", version = "^0.1" }
reqwest = { version = "^0.11", features = ["blocking", "multipart", "json", "stream"] }
serde = {version= "^1", features = ["derive"]}
serde_json = { version = "^1", features = ["std"]}
lz4_flex = "^0.11"
blake3 = "^1"
chrono = { version = "^0.4", default-features = false, features = ["clock", "std"] }
rand = "^0.8"
colored = "2.0.4"
mime_guess = "2.0.4"
thiserror = "1.0.50"
async-trait = "0.1.74"
async-recursion = "1.0.5"
unsigned-varint = "^0.8"
uuid = { version = "^1", features = ["serde", "v4"] }
futures = "^0.3"
futures-util = "^0.3"
futures-core = "0.3.29"
bytes = "1.5.0"

# Dependencies that must exist independent of architecture for testing
[dev-dependencies]


# Native features
[features]
integration-tests = []

# Dependencies that only need to exist when we are in WASM
[target.'cfg(target_arch = "wasm32")'.dependencies]
async-trait = "^0.1"
console_error_panic_hook = { version = "^0.1", optional = true }
getrandom = { version = "^0.2", features = ["js"] }
gloo = { version = "^0.10", features = ["net"] }
js-sys = "^0.3"
pem = "^3"
tokio-util = { version = "^0.7", features = ["compat"] }
wasm-bindgen = { version = "^0.2" }
wasm-bindgen-futures = "^0.4"

# Dependencies that only need to exist when we are testing WASM
[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "^0.3"

# WASM Features
[target.'cfg(target_arch = "wasm32")'.features]
default = ["console_error_panic_hook"]

[[bin]]
name = "banyan"
path = "src/main.rs"

[lib]
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[profile.dev]
split-debuginfo = "unpacked"

[profile.release]
lto = true
