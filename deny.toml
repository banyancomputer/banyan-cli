# This file configures `cargo deny` for validating that dependencies are secure
# (do not have security advisories), exclusively using licenses that we allow,
# and are not in our banned crates list.
#
# It is worth calling out that `cargo deny` only looks at metadata of packages,
# `cargo audit` performs the same security advisory checks but performs deep
# scans on the content of the code as well to provide additional detections on
# whether a vulnerability is present. The two tools should be used together.

# Collect metadata using all the features available in this repository. We do
# not want security vulnerabilities in any of our subset of builds.
all-features = true

[advisories]
vulnerability = "deny"
unmaintained = "deny"
yanked = "deny"
notice = "deny"

# If we accept an advisory either because no fix is available and we need to
# continue development, or because a vulnerability doesn't effect how we use
# the other crate their identifier should be added to this list. It should be
# periodically reviewed and cleaned out as fixes become available.
ignore = [
    # This is the time segfault, we can probably resolve it but that should be
    # a separate issue. Ignoring it to get us to working CI baseline.
    "RUSTSEC-2020-0071",
    # This is an unsoundness bug in atty that has been ignored for the CI baseline
    "RUSTSEC-2021-0145",
]

[licenses]
unlicensed = "deny"

# Licenses we always allow without any additional thoughts, this list should
# only be updated when we encounter a dependency using a license we want to
# include here rather than trying to proactively enumerate all acceptable
# licenses.
allow = [
    "Apache-2.0",
    "0BSD",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "CC0-1.0",
    "ISC",
    "MIT",
    "MIT-0",
    "Zlib",
    # Additional licenses that need to actually be reviewed but have been allowed for CI expediency
    "BSL-1.0",
    "LGPL-3.0",
    "MPL-2.0",
    "Unicode-DFS-2016",
]

# We don't care what these organization think of the license, we are making our
# own assessments as to whether they are fit for our project.
allow-osi-fsf-free = "neither"

# Licenses that we have reviewed and chosen to explicitly reject.
deny = []

# If a license is considered copyleft, we want to consider them carefully as
# they may violate our license or goals by their use. Copy left licenses should
# be reviewed
copyleft = "deny"

# If we haven't approved it, explicitly deny it
default = "deny"

# If we need to use a crate that violates our general policy, we can add that
# to the list here to accept it.
exceptions = [
  { name = "tomb-crypt", allow = ["LicenseRef-LICENSE.txt"] },
]

[bans]
multiple-versions = "deny"
wildcards = "deny"

# Crates/versions that are always allowed regardless of which checks they trigger
allow = [
    # Usage example:
    #{ name = "ansi_term", version = "=0.11.0" },
]

# Crates and versions that are explicitly denied from use in this project
deny = [
    # Usage example:
    #{ name = "ansi_term", version = "=0.11.0" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
# They just couldn't be resolved ourselves.
skip = [
    # Everything below this comment was added for expediency in getting CI working again
    { name = "hashbrown", version = "0.12.3"  },   # from rindexmap
    { name = "hashbrown", version = "0.14.0"  },   # from dashmap

    { name = "autocfg", version = "0.1.8"  },   # from rand v0.6.3
    { name = "autocfg", version = "1.1.0"  },   # from many dependencies

    { name = "base64", version = "0.13.0" },    # from skip_ratchet v0.1.6
    { name = "base64", version = "0.21.2" },    # from reqwest v0.11.18

    { name = "bitflags", version = "1.2.1" },   # from several dependencies
    { name = "bitflags", version = "2.3.3" },   # from rustix

    { name = "cid", version = "0.8.6"  },       # from serde_ipld_dagcbor v0.3.0
    { name = "cid", version = "0.10.1" },       # from libipld-core v0.16.0

    { name = "clap", version = "3.2.25" },      # from criterion v0.4.0
    { name = "clap", version = "4.3.2"  },      # from many dependencies

    { name = "clap_lex", version = "0.2.4" },   # from clap v3.2.25
    { name = "clap_lex", version = "0.5.0" },   # from clap_builder v4.3.1

    { name = "constant_time_eq", version = "0.2.6" }, # from blake2(b/s)_simd v1.0.1
    { name = "constant_time_eq", version = "0.3.0" }, # from blake3 v1.4.1

    { name = "fastrand", version = "1.9.0" }, # from several dependencies
    { name = "fastrand", version = "2.0.0" }, # from tempfile

    { name = "hermit-abi", version = "0.1.19" },    # from atty v0.2.14
    { name = "hermit-abi", version = "0.3.1"  },    # from several dependencies

    { name = "linux-raw-sys", version = "0.3.8" },      # from rustix
    { name = "linux-raw-sys", version = "0.4.3" },      # from rustix

    { name = "memoffset", version = "0.6.5" },   # from nix v0.21.2
    { name = "memoffset", version = "0.7.1" },   # from nix v0.26.2

    { name = "multihash", version = "0.16.3" },     # from cid v0.8.6
    { name = "multihash", version = "0.18.1" },     # from many dependencies

    { name = "nix", version = "0.21.2" },       # from fclones v0.30.0
    { name = "nix", version = "0.26.2" },       # from file-owner v0.1.1

    { name = "parking_lot", version = "0.11.2" },   # from sled v0.34.7
    { name = "parking_lot", version = "0.12.1" },   # from several dependencies

    { name = "parking_lot_core", version = "0.8.6" },   # from parking_lot v0.11.2
    { name = "parking_lot_core", version = "0.9.8" },   # from several dependencies

    { name = "rand", version = "0.6.3" },   # from skip_ratchet v0.1.6
    { name = "rand", version = "0.8.5" },   # from several dependencies

    { name = "rand_chacha", version = "0.1.1" },    # from rand v0.6.3
    { name = "rand_chacha", version = "0.3.1" },    # from rand v0.8.5

    { name = "rand_core", version = "0.3.1" },    # from many dependencies
    { name = "rand_core", version = "0.4.2" },    # from several dependencies
    { name = "rand_core", version = "0.6.4" },    # from many dependencies

    { name = "redox_syscall", version = "0.2.16" }, # from several dependencies
    { name = "redox_syscall", version = "0.3.5"  }, # from several dependencies

    { name = "rustix", version = "0.37.12" },     # from several dependencies
    { name = "rustix", version = "0.38.3" },      # from is-terminal

    { name = "syn", version = "1.0.109" }, # from several dependencies
    { name = "syn", version = "2.0.18"  }, # from many dependencies

    { name = "wasi", version = "0.10.0+wasi-snapshot-preview1" },   # from time v0.1.45
    { name = "wasi", version = "0.11.0+wasi-snapshot-preview1" },   # from several dependencies

    { name = "windows-sys", version = "0.42.0" },   # from schannel v0.1.21
    { name = "windows-sys", version = "0.45.0" },   # from console v0.15.7
    { name = "windows-sys", version = "0.48.0" },   # from several dependencies

    { name = "windows-targets", version = "0.42.2" },   # from windows-sys v0.45.0
    { name = "windows-targets", version = "0.48.0" },   # from several dependencies

    { name = "windows_aarch64_gnullvm", version = "0.42.2" },   # from several dependencies
    { name = "windows_aarch64_gnullvm", version = "0.48.0" },   # from several dependencies

    { name = "windows_aarch64_msvc", version = "0.42.2" },   # from several dependencies
    { name = "windows_aarch64_msvc", version = "0.48.0" },   # from several dependencies

    { name = "windows_i686_gnu", version = "0.42.0" },   # from several dependencies
    { name = "windows_i686_gnu", version = "0.48.0" },   # from several dependencies

    { name = "windows_i686_gnu", version = "0.42.0" },   # from several dependencies
    { name = "windows_i686_gnu", version = "0.48.0" },   # from several dependencies

    { name = "windows_i686_msvc", version = "0.42.0" },   # from several dependencies
    { name = "windows_i686_msvc", version = "0.48.0" },   # from several dependencies

    { name = "windows_x86_64_gnu", version = "0.42.0" },   # from several dependencies
    { name = "windows_x86_64_gnu", version = "0.48.0" },   # from several dependencies

    { name = "windows_x86_64_gnullvm", version = "0.42.0" },   # from several dependencies
    { name = "windows_x86_64_gnullvm", version = "0.48.0" },   # from several dependencies

    { name = "windows_x86_64_msvc", version = "0.42.0" },   # from several dependencies
    { name = "windows_x86_64_msvc", version = "0.48.0" },   # from several dependencies

    { name = "wnfs", version = "0.1.20"            },   # mixing our github fork with regular deps
    { name = "wnfs-common", version = "0.1.20"     },   # mixing our github fork with regular deps
    { name = "wnfs-hamt", version = "0.1.20"       },   # mixing our github fork with regular deps
    { name = "wnfs-namefilter", version = "0.1.20" },   # mixing our github fork with regular deps
]

[sources]
# We do not allow registries other than the official crates one which is known
# by default.
unknown-registry = "deny"

# Using a git repository as a crate source is denied by default, to use a git
# repo as a dependency source they must be reviewed and approved
unknown-git = "deny"

# Allow all crates that we have made
[sources.allow-org]
github = ["banyancomputer"]